<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
  <title id="mc138388">gpsnmpd</title>
  <body>
    <p>Reports on the health and state of a Greenplum Database system through SNMP.</p>
    <p>The <codeph>gpsnmpd</codeph> agent is deprecated and will be removed in a future release.</p>
    <section id="section2">
      <title>Synopsis</title>
      <codeblock><b>gpsnmpd</b> <b>-s</b> <b>-C</b> <varname>connect_string </varname> [<b>-b</b>] [<b>-g</b>] [<b>-m</b> <varname>MIB</varname>:...]
        [<b>-M</b> <varname>directory</varname>:...]

<b>gpsnmpd</b> <b>-c</b> <varname>file</varname> <b>-C</b> <varname>connect_string</varname> [<b>-x</b> <varname>address</varname>:<varname>port</varname>] [<b>-b</b>] [<b>-g</b>]
        [<b>-m</b> <varname>MIB</varname>:...] [<b>-M</b> <varname>directory</varname>:...]

<b>gpsnmpd</b> <b>-?</b>

<b>gpsnmpd</b> <b>--version</b></codeblock>
    </section>
    <section id="section3">
      <title>Description</title>
      <p>Greenplum's <codeph>gpsnmpd</codeph> agent is an SNMP (Simple Network Management Protocol)
        daemon that reports on the health and state of a Greenplum Database system by using a set of
        MIBs (Management Information Bases). MIBs are a collection of objects that describe an
        SNMP-manageable entity; in this case, a Greenplum Database system. In a typical environment,
          <codeph>gpsnmpd</codeph> is polled by a network monitor and returns information on a
        Greenplum Database system. It currently supports the generic RDBMS MIB and typically
        operates on the master host.</p>
      <p><codeph>gpsnmpd</codeph> works in conjunction with the SNMP support that (normally) already
        exists on the Greenplum Database system. <codeph>gpsnmpd</codeph> does not replace the
        system <codeph>snmpd</codeph> agent that monitors items such as hardware, processor, memory,
        and network functions. However, you can run the Greenplum SNMP agent as a stand-alone agent
        if required.</p>
      <p>As a standalone SNMP agent, gpsnmpd listens (on a network socket) for SNMP queries, and
        requires the same extensive configuration as the system SNMP agent. </p>
      <p>Running <codeph>gpsnmpd</codeph> as a sub-agent to the system
        agent is recommended. When it starts, the <codeph>gpsnmpd</codeph> sub-agent registers itself with the
        system-level SNMP agent, and communicates to the system agent the parts of the MIB of which
        it is aware. The system agent communicates with the SNMP client/network monitoring
        application and forwards requests for particular sections of the MIB to the
          <codeph>gpsnmpd</codeph> sub-agent. Note that the <codeph>gpsnmpd</codeph> sub-agent
        communicates with the system agent through UNIX sockets; it does not listen on network
        sockets when used as a sub-agent.</p>
    </section>
    <section id="section4">
      <title>Options</title>
      <parml>
        <plentry>
          <pt>-s (sub-agent)</pt>
          <pd>Run <codeph>gpsnmpd</codeph> as an AgentX sub-agent to the system
              <codeph>snmpd</codeph> process. You do not need to use the <codeph>-x</codeph> option
            when using this option.</pd>
        </plentry>
        <plentry>
          <pt>-b (background)</pt>
          <pd>Run <codeph>gpsnmpd</codeph> as a background process.</pd>
        </plentry>
        <plentry>
          <pt>-c (configuration file)</pt>
          <pd>Specify the SNMP configuration file to use when starting <codeph>gpsnmpd</codeph> as a
            stand-alone agent. Note that you can specify any configuration file to run
              <codeph>gpsnmpd</codeph> as a stand-alone agent; you do not have to use the
            /etc/snmp/snmpd.conf file. The configuration file you use must include a value for
              <codeph>rocommunity</codeph>.</pd>
        </plentry>
        <plentry>
          <pt>-C <varname>connection_string</varname> (libpq) </pt>
          <pd>The <codeph>libpq</codeph> connection string to connect to Greenplum Database. Note
            that you can run <codeph>gpsnmpd</codeph> from a remote system. Depending on your
            network configuration, the <codeph>gpsnmpd</codeph> agent can establish a connection and
            monitor a remote Greenplum Database database instance. The configuration string can
            contain the database name, the port number, the username, the password, and other
            information if required.</pd>
          <pd>You can use the postgres database in the connection string
              (<codeph>dbname=postgres</codeph>). </pd>
          <pd>You do not need to specify the <codeph>-C</codeph> option if you create a database
            role (user id) called <codeph>root</codeph>, and add the following line in the
              <codeph>pg_hba.conf</codeph> file:
            <codeblock>local postgres root ident</codeblock></pd>
          <pd>This allows the UNIX user <codeph>root</codeph> to connect to the postgres database
            over the local connection. The <codeph>root</codeph> user does not require special
            permissions. The <codeph>user</codeph> and <codeph>password</codeph> parameters are only
            required when starting <codeph>gpsnmpd</codeph> as a user other than
              <codeph>root</codeph>.<note>The connection string can be a <codeph>conninfo</codeph>
              data type. Use <codeph>conninfo</codeph> data for this parameter to specify a LDAP
              connection lookup.</note></pd>
        </plentry>
        <plentry>
          <pt>-g (use syslog)</pt>
          <pd>Logs <codeph>gpsnmpd</codeph> error messages to <codeph>syslog</codeph>. </pd>
        </plentry>
        <plentry>
          <pt>-m <varname>MIB</varname>:...</pt>
          <pd>Loads one or more MIBs when starting <codeph>gpsnmpd</codeph>. Use a colon
              (<codeph>:</codeph>) to separate the MIBs. Enter <codeph>ALL</codeph> to load all
            MIBs. If you do not enter <codeph>-m</codeph> in the <codeph>gpsnmpd</codeph> command, a
            default set of MIBs are loaded by default.</pd>
        </plentry>
        <plentry>
          <pt>-M <varname>directory</varname>:...</pt>
          <pd>Loads all MIBs from one or more directories when starting <codeph>gpsnmpd</codeph>.
            Use a colon (<codeph>:</codeph>) to separate the each directory. Enter the full path to
            each directory you specify for this option. If you do not enter <codeph>-M</codeph> in
            the <codeph>gpsnmpd</codeph> command, a default set of MIBs are loaded by default.</pd>
        </plentry>
        <plentry>
          <pt>-x <varname>address</varname>:<varname>port</varname> (of a network interface)</pt>
          <pd>Specify an IP address for a network interface card on the host system, and specify a
            port other than the default SNMP port of 161. This enables you to run
              <codeph>gpsnmpd</codeph> without root permissions (you must have root permissions to
            use ports 1024 and lower). </pd>
          <pd>You do not need to specify this option if you are running <codeph>gpsnmpd</codeph> as
            an AgentX sub-agent (<codeph>-s</codeph>).</pd>
        </plentry>
        <plentry>
          <pt>-? (help)</pt>
          <pd>Displays the online help.</pd>
        </plentry>
        <plentry>
          <pt>-V</pt>
          <pd>Displays the version of this utility.</pd>
        </plentry>
      </parml>
    </section>
    <section id="section5">
      <title>Examples</title>
      <p>Start <codeph>gpsnmpd</codeph> as an agentx subagent:</p>
      <codeblock># gpsnmpd -s -b -m ALL -C "dbname=postgres user=gpadmin password=secret"</codeblock>
      <p>Start <codeph>gpsnmpd</codeph> as a stand-alone agent:</p>
      <codeblock># gpsnmpd -b -c /etc/snmp/snmpd.conf -x 192.168.100.12:10161 -M /usr/mibs/mymibs
-C "dbname=postgres user=gpadmin password=secret"</codeblock>
    </section>
  </body>
</topic>
